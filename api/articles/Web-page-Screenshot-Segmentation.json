{"title":"网页长截图自动分割工具","uid":"7257ab73c9c7b2fb6eabab288ff4c4fc","slug":"Web-page-Screenshot-Segmentation","date":"2024-02-06T03:29:01.000Z","updated":"2024-02-22T03:52:13.945Z","comments":true,"path":"api/articles/Web-page-Screenshot-Segmentation.json","keywords":"计算机技术,大数据,人工智能","cover":"https://images.unsplash.com/photo-1601972602288-3be527b4f18a?q=80&w=2370&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&q=80&w=800","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>当需要分享或分析网页内容时，长截图是一种非常实用的形式，它能够完整地展示页面。然而，处理这些长截图时，如何保持其信息的完整性和可读性，同时方便进行后续操作，一直是一个挑战。比如目前（2024年初）市面上主流的AI图像模型，仍然不能处理很大、很复杂的图片，如果强行把一张长截图输入模型，就会导致模型输出的性能变差（很多细节无法被识别到）。为了解决这个问题，我开发了一款基于OpenCV的工具，旨在简化长截图的处理过程，同时保持其内容的完整性和可读性。</p>\n<p>这个项目已在我的Github开源：<a href=\"https://github.com/Tim-Saijun/Web-page-Screenshot-Segmentation\">https://github.com/Tim-Saijun/Web-page-Screenshot-Segmentation</a></p>\n<p>与许多现有的工具或方法不同，Web-page-Screenshot-Segmentation采用了OpenCV自动地识别和遵循网页内容的自然分隔线，自动找到最合适的分割点。也就是说无论是标题、段落还是图表，都能够被整齐地保留在分割后的图片中，不会出现内容断裂或遗漏的情况。</p>\n<p>使用Web-page-Screenshot-Segmentation非常简单，只需准备一张长截图，工具便会自动分析图片内容，并智能决定分割点。最终将获得一系列完整且结构化良好的图片，方便进行分享和进一步处理。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>该项目用于根据文本的高度将网页的长截图分割成几个部分。主要思想是找到图像的低变化区域，然后在低变化区域中找到分割线。<br><img src=\"https://raw.githubusercontent.com/Tim-Saijun/Web-page-Screenshot-Segmentation/main/images/demo.png\" alt=\"红线是分割线\"><br>输出的是网页的小而完整的图像，可以用于使用<a href=\"https://github.com/abi/screenshot-to-code\">Screen-to-code</a>生成网页或训练模型。<br>更多结果可以在<a href=\"images\">images</a>目录中找到。</p>\n<h2 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">txt</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\"> pip install Web-page-Screenshot-Segmentation</span></span></code></pre></div><h2 id=\"在命令行中使用\"><a href=\"#在命令行中使用\" class=\"headerlink\" title=\"在命令行中使用\"></a>在命令行中使用</h2><p>获取图像的分割线的高度</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">python</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-m</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Web_page_Screenshot_Segmentation.master</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-f</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">path/to/img</span><span style=\"color: #E9F284\">&quot;</span></span></code></pre></div><p>输出应该是个列表:<code>[6, 868, 1912, 2672, 3568, 4444, 5124, 6036, 7698]</code>。它是图像分割线的高度列表。<br>如果你想在图中显示这条分割线，可以加上<code> -s True</code>参数：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">python</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-m</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Web_page_Screenshot_Segmentation.master</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-f</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">path/to/img</span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-s</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">True</span></span></code></pre></div><h3 id=\"在图像中画出分割线\"><a href=\"#在图像中画出分割线\" class=\"headerlink\" title=\"在图像中画出分割线\"></a>在图像中画出分割线</h3><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">python</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-m</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Web_page_Screenshot_Segmentation.drawer</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--image_file</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">path/to/image.jpg</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--hl</span><span style=\"color: #F8F8F2\"> [100,200] --color (</span><span style=\"color: #50FA7B\">0,255,0</span><span style=\"color: #F8F8F2\">)</span></span></code></pre></div><h3 id=\"切分图像\"><a href=\"#切分图像\" class=\"headerlink\" title=\"切分图像\"></a>切分图像</h3><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">python</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-m</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">Web_page_Screenshot_Segmentation.spliter</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--f</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">path/to/image.jpg</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">-ht</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">&quot;</span><span style=\"color: #F1FA8C\">[233,456]</span><span style=\"color: #E9F284\">&quot;</span></span></code></pre></div><p>你将得到分割图像，保存在命令返回的路径中。</p>\n<p>更多用法解释请参照帮助：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">bash</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #50FA7B\">python</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">master.py</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--help</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">python</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #F1FA8C\">spliter.py</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">--help</span></span></code></pre></div><h2 id=\"从源码使用\"><a href=\"#从源码使用\" class=\"headerlink\" title=\"从源码使用\"></a>从源码使用</h2><h3 id=\"split-heights-函数\"><a href=\"#split-heights-函数\" class=\"headerlink\" title=\"split_heights 函数\"></a>split_heights 函数</h3><p><code>split_heights</code> 函数用于根据各种阈值将图像分割成几个部分。它接受以下参数：</p>\n<ul>\n<li><code>file_path</code>: 图像文件的路径。</li>\n<li><code>split</code>: 一个布尔值，指示是否分割图像。</li>\n<li><code>height_threshold</code>: 低变化区域的高度阈值。</li>\n<li><code>variation_threshold</code>: 低变化区域的变化阈值。</li>\n<li><code>color_threshold</code>: 颜色差异的阈值。</li>\n<li><code>color_variation_threshold</code>: 颜色差异变化的阈值。</li>\n<li><code>merge_threshold</code>: 两条线之间最小距离的阈值。</li>\n</ul>\n<p>如果 <code>split</code> 是 <code>False</code>，函数返回分割线的高程列表；如果 <code>split</code> 是 <code>True</code>，则返回分割图像的路径。</p>\n<h4 id=\"示例用法\"><a href=\"#示例用法\" class=\"headerlink\" title=\"示例用法\"></a>示例用法</h4><div class=\"language-python\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">python</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">import</span><span style=\"color: #F8F8F2\"> Web_page_Screenshot_Segmentation</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">from</span><span style=\"color: #F8F8F2\"> Web_page_Screenshot_Segmentation.master </span><span style=\"color: #FF79C6\">import</span><span style=\"color: #F8F8F2\"> split_heights</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 在 &#39;path/to/image.jpg&#39; 分割图像为几个部分</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">split_image_path </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> split_heights(</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">file_path</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">path/to/image.jpg</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">split</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">True</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">height_threshold</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">102</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">variation_threshold</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">0.5</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">color_threshold</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">100</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">color_variation_threshold</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">15</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">merge_threshold</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #BD93F9\">350</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">f</span><span style=\"color: #F1FA8C\">&quot;分割后的图像保存在 </span><span style=\"color: #BD93F9\">&#123;</span><span style=\"color: #F8F8F2\">split_image_path</span><span style=\"color: #BD93F9\">&#125;</span><span style=\"color: #F1FA8C\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span></code></pre></div><p>在这个例子中，根据提供的阈值，’path&#x2F;to&#x2F;image.jpg’ 的图像被分割成几个部分。分割后的图像保存在函数返回的路径。</p>\n<h3 id=\"draw-line-from-file-函数\"><a href=\"#draw-line-from-file-函数\" class=\"headerlink\" title=\"draw_line_from_file 函数\"></a>draw_line_from_file 函数</h3><p><code>draw_line_from_file</code> 函数用于在指定高度的图像上绘制线条。它接受以下参数：</p>\n<ul>\n<li><code>image_file</code>: 图像文件的路径。</li>\n<li><code>heights</code>: 在指定高度绘制线条的高程列表。</li>\n<li><code>color</code>: 线条的颜色。默认颜色为红色 <code>(0, 0, 255)</code>。</li>\n</ul>\n<p>该函数从提供的文件路径读取图像，在指定的高度绘制线条，然后将修改后的图像保存到新文件中。新文件保存在 <code>result</code> 目录下，与原始文件同名，但在文件扩展名前添加了 ‘result’。</p>\n<p>如果函数在读取图像文件时遇到错误（例如，如果文件路径包含 ‘.’ 或中文字符），则会抛出异常。</p>\n<h4 id=\"示例用法-1\"><a href=\"#示例用法-1\" class=\"headerlink\" title=\"示例用法\"></a>示例用法</h4><div class=\"language-python\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">python</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">import</span><span style=\"color: #F8F8F2\"> Web_page_Screenshot_Segmentation</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">from</span><span style=\"color: #F8F8F2\"> Web_page_Screenshot_Segmentation.spliter </span><span style=\"color: #FF79C6\">import</span><span style=\"color: #F8F8F2\"> draw_line_from_file</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\"># 在 &#39;path/to/image.jpg&#39; 的图像上，在高度 100 和 200 处绘制线条</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">result_image_path </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> draw_line_from_file(</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">image_file</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F1FA8C\">path/to/image.jpg</span><span style=\"color: #E9F284\">&#39;</span><span style=\"color: #F8F8F2\">,</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">heights</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">[</span><span style=\"color: #BD93F9\">100</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">200</span><span style=\"color: #F8F8F2\">],</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FFB86C; font-style: italic\">color</span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">255</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)  </span><span style=\"color: #6272A4\"># 以绿色绘制线条</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD\">print</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">f</span><span style=\"color: #F1FA8C\">&quot;修改后的图像保存在 </span><span style=\"color: #BD93F9\">&#123;</span><span style=\"color: #F8F8F2\">result_image_path</span><span style=\"color: #BD93F9\">&#125;</span><span style=\"color: #F1FA8C\">&quot;</span><span style=\"color: #F8F8F2\">)</span></span></code></pre></div><p>在这个例子中，’path&#x2F;to&#x2F;image.jpg’ 的图像被修改，以在高度 100 和 200 处绘制绿色线条。修改后的图像保存在函数返回的路径。</p>\n","feature":true,"text":"背景当需要分享或分析网页内容时，长截图是一种非常实用的形式，它能够完整地展示页面。然而，处理这些长截图时，如何保持其信息的完整性和可读性，同时方便进行后续操作，...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"OpenCV","slug":"OpenCV","count":2,"path":"api/categories/OpenCV.json"}],"tags":[{"name":"代码工具","slug":"代码工具","count":2,"path":"api/tags/代码工具.json"},{"name":"OpenCV","slug":"OpenCV","count":1,"path":"api/tags/OpenCV.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">开始使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">在命令行中使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%94%BB%E5%87%BA%E5%88%86%E5%89%B2%E7%BA%BF\"><span class=\"toc-text\">在图像中画出分割线</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%87%E5%88%86%E5%9B%BE%E5%83%8F\"><span class=\"toc-text\">切分图像</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E6%BA%90%E7%A0%81%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">从源码使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#split-heights-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">split_heights 函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">示例用法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#draw-line-from-file-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">draw_line_from_file 函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%E7%94%A8%E6%B3%95-1\"><span class=\"toc-text\">示例用法</span></a></li></ol></li></ol></li></ol>","author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"stderr和stdout：理解日志与输出","uid":"d8719e661cefd842e9603629d87bd5b8","slug":"standard-output","date":"2024-02-17T12:42:32.000Z","updated":"2024-02-22T03:52:13.945Z","comments":true,"path":"api/articles/standard-output.json","keywords":"计算机技术,大数据,人工智能","cover":"https://images.unsplash.com/photo-1609666973548-54217494b70d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wzNjAwOTd8MHwxfHNlYXJjaHwxNnx8b3V0cHV0fGVufDB8fHx8MTcwODE3Mzc5NHww&ixlib=rb-4.0.3&q=80&w=800","text":"标准输出（stdout）与标准错误（stderr）这两个概念虽然简单，但在日志记录、错误处理和数据流管理中扮演着核心角色。本文将探讨stdout和stderr的...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"算法编程","slug":"算法编程","count":2,"path":"api/categories/算法编程.json"}],"tags":[{"name":"标准输出","slug":"标准输出","count":1,"path":"api/tags/标准输出.json"}],"author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}},"feature":true},"next_post":{"title":"GPT网页爬虫","uid":"e70118a7ef900115be6534ffca042ddb","slug":"GPT网页爬虫","date":"2023-12-30T13:29:01.000Z","updated":"2024-02-22T03:52:13.945Z","comments":true,"path":"api/articles/GPT网页爬虫.json","keywords":"计算机技术,大数据,人工智能","cover":"https://images.unsplash.com/photo-1492515114975-b062d1a270ae?q=80&w=2370&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&q=80&w=800","text":"介绍GPT-Web-Crawler 是一个基于python和puppeteer的网络爬虫，可以爬取网页并从网页中提取内容（包括网页的标题，url，关键词，描述，...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"others","slug":"others","count":3,"path":"api/categories/others.json"}],"tags":[{"name":"爬虫","slug":"爬虫","count":1,"path":"api/tags/爬虫.json"},{"name":"GPT","slug":"GPT","count":1,"path":"api/tags/GPT.json"}],"author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}},"feature":true}}