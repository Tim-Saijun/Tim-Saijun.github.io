{"title":"算法基础模板","uid":"25e546c45e26ec097339018184d9d5d1","slug":"算法基础模板","date":"2023-03-07T13:14:24.000Z","updated":"2024-02-22T03:52:13.965Z","comments":true,"path":"api/articles/算法基础模板.json","keywords":"计算机技术,大数据,人工智能","cover":null,"content":"<p><a href=\"https://timbl.ml/%E7%AE%97%E6%B3%95%E7%BC%96%E7%A8%8B/tl/\">图论</a></p>\n<p><a href=\"https://timbl.ml/%E7%AE%97%E6%B3%95%E7%BC%96%E7%A8%8B/dp/\">动态规划</a></p>\n<h1 id=\"基础算法\"><a href=\"#基础算法\" class=\"headerlink\" title=\"基础算法\"></a>基础算法</h1><h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><h3 id=\"快速排序算法模板\"><a href=\"#快速排序算法模板\" class=\"headerlink\" title=\"快速排序算法模板\"></a>快速排序算法模板</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/787/\">AcWing 785. 快速排序</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">quick_sort</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">q</span><span style=\"color: #F8F8F2\">[], </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">l</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">r</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (l </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> r) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, x </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q[l </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> j)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">do</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ; </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (q[i] </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> x);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">do</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> ; </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (q[j] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> x);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> j) </span><span style=\"color: #50FA7B\">swap</span><span style=\"color: #F8F8F2\">(q[i], q[j]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">quick_sort</span><span style=\"color: #F8F8F2\">(q, l, j), </span><span style=\"color: #50FA7B\">quick_sort</span><span style=\"color: #F8F8F2\">(q, j </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, r);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"归并排序算法模板\"><a href=\"#归并排序算法模板\" class=\"headerlink\" title=\"归并排序算法模板\"></a>归并排序算法模板</h3><p>—— 模板题<a href=\"https://www.acwing.com/problem/content/789/\"> AcWing 787. 归并排序</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">merge_sort</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">q</span><span style=\"color: #F8F8F2\">[], </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">l</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">r</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (l </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> r) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">merge_sort</span><span style=\"color: #F8F8F2\">(q, l, mid);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">merge_sort</span><span style=\"color: #F8F8F2\">(q, mid </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, r);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> k </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l, j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> r)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (q[i] </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> q[j]) tmp[k </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q[i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> tmp[k </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q[j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> mid) tmp[k </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q[i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> r) tmp[k </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q[j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l, j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> r; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\">, j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ) q[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> tmp[j];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"二分\"><a href=\"#二分\" class=\"headerlink\" title=\"二分\"></a>二分</h2><h3 id=\"整数二分算法模板\"><a href=\"#整数二分算法模板\" class=\"headerlink\" title=\"整数二分算法模板\"></a>整数二分算法模板</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/791/\">AcWing 789. 数的范围</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">) {</span><span style=\"color: #6272A4\">/* ... */</span><span style=\"color: #F8F8F2\">}</span><span style=\"color: #6272A4\"> // 检查x是否满足某种性质</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">bsearch_1</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">l</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">r</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (l </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> r)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(mid)) r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid;</span><span style=\"color: #6272A4\">    // check()判断mid是否满足性质</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> l;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">bsearch_2</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">l</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">r</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (l </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> r)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(mid)) l </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> l;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"浮点数二分算法模板\"><a href=\"#浮点数二分算法模板\" class=\"headerlink\" title=\"浮点数二分算法模板\"></a>浮点数二分算法模板</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/792/\">AcWing 790. 数的三次方根</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">double</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">) {</span><span style=\"color: #6272A4\">/* ... */</span><span style=\"color: #F8F8F2\">}</span><span style=\"color: #6272A4\"> // 检查x是否满足某种性质</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">double</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">bsearch_3</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">double</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">l</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">double</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">r</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">const</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">double</span><span style=\"color: #F8F8F2\"> eps </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #FF79C6\">e-</span><span style=\"color: #BD93F9\">6</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\">   // eps 表示精度，取决于题目对精度的要求</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (r </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> eps)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">double</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (l </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> r) </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(mid)) r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> l;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"高精度\"><a href=\"#高精度\" class=\"headerlink\" title=\"高精度\"></a>高精度</h2><h3 id=\"高精度加法\"><a href=\"#高精度加法\" class=\"headerlink\" title=\"高精度加法\"></a>高精度加法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/793/\">AcWing 791. 高精度加法</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// C = A + B, A &gt;= 0, B &gt;= 0</span></span>\n<span class=\"line\"><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #50FA7B\">add</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">A</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">B</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (A.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> B.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">()) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">add</span><span style=\"color: #F8F8F2\">(B, A);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> A.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">(); i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> A[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> B.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">()) t </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> B[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        C.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(t </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (t) C.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(t);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"高精度减法\"><a href=\"#高精度减法\" class=\"headerlink\" title=\"高精度减法\"></a>高精度减法</h3><p>—— 模板题 [AcWing 792. 高精度减法]<a href=\"https://www.acwing.com/problem/content/794/\">https://www.acwing.com/problem/content/794/</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// C = A - B, 满足A &gt;= B, A &gt;= 0, B &gt;= 0</span></span>\n<span class=\"line\"><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #50FA7B\">sub</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">A</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">B</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> A.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">(); i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> A[i] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> t;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> B.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">()) t </span><span style=\"color: #FF79C6\">-=</span><span style=\"color: #F8F8F2\"> B[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        C.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">((t </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (t </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (C.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> C.</span><span style=\"color: #50FA7B\">back</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) C.</span><span style=\"color: #50FA7B\">pop_back</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"高精度乘低精度\"><a href=\"#高精度乘低精度\" class=\"headerlink\" title=\"高精度乘低精度\"></a>高精度乘低精度</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/795/\">AcWing 793. 高精度乘法</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// C = A * b, A &gt;= 0, b &gt;= 0</span></span>\n<span class=\"line\"><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #50FA7B\">mul</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">A</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> A.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">||</span><span style=\"color: #F8F8F2\"> t; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> A.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">()) t </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> A[i] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> b;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        C.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(t </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (C.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> C.</span><span style=\"color: #50FA7B\">back</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) C.</span><span style=\"color: #50FA7B\">pop_back</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"高精度除以低精度\"><a href=\"#高精度除以低精度\" class=\"headerlink\" title=\"高精度除以低精度\"></a>高精度除以低精度</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/796/\">AcWing 794. 高精度除法</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// A / b = C ... r, A &gt;= 0, b &gt; 0</span></span>\n<span class=\"line\"><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #50FA7B\">div</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">A</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">r</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> A.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> A[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        C.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(r </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> b);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        r </span><span style=\"color: #FF79C6\">%=</span><span style=\"color: #F8F8F2\"> b;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">reverse</span><span style=\"color: #F8F8F2\">(C.</span><span style=\"color: #50FA7B\">begin</span><span style=\"color: #F8F8F2\">(), C.</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">());</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (C.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> C.</span><span style=\"color: #50FA7B\">back</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) C.</span><span style=\"color: #50FA7B\">pop_back</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> C;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"前缀与差分\"><a href=\"#前缀与差分\" class=\"headerlink\" title=\"前缀与差分\"></a>前缀与差分</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前缀：快速求取某一段的和<br>差分：快速对某一段+c，与前缀互为逆运算</p></blockquote>\n<h3 id=\"一维前缀和\"><a href=\"#一维前缀和\" class=\"headerlink\" title=\"一维前缀和\"></a>一维前缀和</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/797/\">AcWing 795. 前缀和</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">S[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> a[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> a[</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> ... a[i]</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">a[l] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> ... </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> a[r] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> S[r] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> S[l </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">]</span></span></code></pre></div><h3 id=\"二维前缀和\"><a href=\"#二维前缀和\" class=\"headerlink\" title=\"二维前缀和\"></a>二维前缀和</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/798/\">AcWing 796. 子矩阵的和</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">S[i, j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> 第i行j列格子左上部分所有元素的和</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵的和为：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">S[x2, y2] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> S[x1 </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, y2] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> S[x2, y1 </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> S[x1 </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, y1 </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">]</span></span></code></pre></div><h3 id=\"一维差分\"><a href=\"#一维差分\" class=\"headerlink\" title=\"一维差分\"></a>一维差分</h3><p>—— 模板题<a href=\"https://www.acwing.com/problem/content/799/\"> AcWing 797. 差分</a><br>给区间[l, r]中的每个数加上c：B[l] += c, B[r + 1] -= c</p>\n<h3 id=\"二维差分\"><a href=\"#二维差分\" class=\"headerlink\" title=\"二维差分\"></a>二维差分</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/800/\">AcWing 798. 差分矩阵</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">给以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵中的所有元素加上c：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">S[x1, y1] </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> c, S[x2 </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, y1] </span><span style=\"color: #FF79C6\">-=</span><span style=\"color: #F8F8F2\"> c, S[x1, y2 </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">-=</span><span style=\"color: #F8F8F2\"> c, S[x2 </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, y2 </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> c</span></span></code></pre></div><h2 id=\"位运算\"><a href=\"#位运算\" class=\"headerlink\" title=\"位运算\"></a>位运算</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/803/\">AcWing 801. 二进制中1的个数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">求n的第k位数字: n </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> k </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">返回n的最后一位1：</span><span style=\"color: #50FA7B\">lowbit</span><span style=\"color: #F8F8F2\">(n) </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\">n</span></span></code></pre></div><h2 id=\"双指针算法\"><a href=\"#双指针算法\" class=\"headerlink\" title=\"双指针算法\"></a>双指针算法</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/801/\">AcWIng 799. 最长连续不重复子序列</a>, <a href=\"https://www.acwing.com/problem/content/802/\">AcWing 800. 数组元素的目标和</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (j </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(i, j)) j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 具体问题的逻辑</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">常见问题分类：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    (</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) 对于一个序列，用两个指针维护一段区间</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    (</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) 对于两个序列，维护某种次序，比如归并排序中合并两个有序序列的操作</span></span></code></pre></div><h2 id=\"离散化\"><a href=\"#离散化\" class=\"headerlink\" title=\"离散化\"></a>离散化</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/804/\">AcWing 802. 区间和</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> alls;</span><span style=\"color: #6272A4\"> // 存储所有待离散化的值</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">sort</span><span style=\"color: #F8F8F2\">(alls.</span><span style=\"color: #50FA7B\">begin</span><span style=\"color: #F8F8F2\">(), alls.</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">());</span><span style=\"color: #6272A4\"> // 将所有值排序</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">alls.</span><span style=\"color: #50FA7B\">erase</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #50FA7B\">unique</span><span style=\"color: #F8F8F2\">(alls.</span><span style=\"color: #50FA7B\">begin</span><span style=\"color: #F8F8F2\">(), alls.</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">()), alls.</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">());</span><span style=\"color: #6272A4\">   // 去掉重复元素</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 二分求出x对应的离散化的值</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\"> // 找到第一个大于等于x的位置</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> alls.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">() </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (l </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> r)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (alls[mid] </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> x) r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> mid </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\"> // 映射到1, 2, ...n</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"区间合并\"><a href=\"#区间合并\" class=\"headerlink\" title=\"区间合并\"></a>区间合并</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/805/\">AcWing 803. 区间合并</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// 将所有存在交集的区间合并</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">merge</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #8BE9FD; font-style: italic\">PII</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">segs</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vector</span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\">PII</span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">sort</span><span style=\"color: #F8F8F2\">(segs.</span><span style=\"color: #50FA7B\">begin</span><span style=\"color: #F8F8F2\">(), segs.</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">());</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> st </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #FF79C6\">e</span><span style=\"color: #BD93F9\">9</span><span style=\"color: #F8F8F2\">, ed </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #FF79C6\">e</span><span style=\"color: #BD93F9\">9</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">auto</span><span style=\"color: #F8F8F2\"> seg : segs)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (ed </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> seg.first)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (st </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #FF79C6\">e</span><span style=\"color: #BD93F9\">9</span><span style=\"color: #F8F8F2\">) res.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">({st, ed});</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            st </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> seg.first, ed </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> seg.second;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> ed </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">max</span><span style=\"color: #F8F8F2\">(ed, seg.second);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (st </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #FF79C6\">e</span><span style=\"color: #BD93F9\">9</span><span style=\"color: #F8F8F2\">) res.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">({st, ed});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    segs </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h1 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h1><h2 id=\"链表与邻接表：树与图的存储\"><a href=\"#链表与邻接表：树与图的存储\" class=\"headerlink\" title=\"链表与邻接表：树与图的存储\"></a>链表与邻接表：树与图的存储</h2><h3 id=\"单链表\"><a href=\"#单链表\" class=\"headerlink\" title=\"单链表\"></a>单链表</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/828/\">AcWing 826. 单链表</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// head存储链表头，e[]存储节点的值，ne[]存储节点的next指针，idx表示当前用到了哪个节点</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> head, e[N], ne[N], idx;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 初始化</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">init</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    head </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    idx </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 在链表头插入一个数a</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">insert</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    e[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> a, ne[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> head, head </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> idx </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 将头结点删除，需要保证头结点存在</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">remove</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    head </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[head];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"双链表\"><a href=\"#双链表\" class=\"headerlink\" title=\"双链表\"></a>双链表</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/829/\">AcWing 827. 双链表</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// e[]表示节点的值，l[]表示节点的左指针，r[]表示节点的右指针，idx表示当前用到了哪个节点</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> e[N], l[N], r[N], idx;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 初始化</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">init</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    //0是左端点，1是右端点</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    r[</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, l[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    idx </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 在节点a的右边插入一个数x</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">insert</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    e[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    l[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> a, r[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r[a];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    l[r[a]] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> idx, r[a] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> idx </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 删除节点a</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">remove</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    l[r[a]] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> l[a];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    r[l[a]] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r[a];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"栈与队列：单调队列、单调栈\"><a href=\"#栈与队列：单调队列、单调栈\" class=\"headerlink\" title=\"栈与队列：单调队列、单调栈\"></a>栈与队列：单调队列、单调栈</h2><h3 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/830/\">AcWing 828. 模拟栈</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// tt表示栈顶</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> stk[N], tt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 向栈顶插入一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">stk[ </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> tt] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 从栈顶弹出一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">tt </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 栈顶的值</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">stk[tt];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 判断栈是否为空，如果 tt &gt; 0，则表示不为空</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (tt </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/831/\">AcWing 829. 模拟队列</a></p>\n<ol>\n<li>普通队列：</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// hh 表示队头，tt表示队尾</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> q[N], hh </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, tt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 向队尾插入一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">q[ </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> tt] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 从队头弹出一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">hh </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 队头的值</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">q[hh];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 判断队列是否为空，如果 hh &lt;= tt，则表示不为空</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (hh </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> tt)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><ol start=\"2\">\n<li>循环队列</li>\n</ol>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// hh 表示队头，tt表示队尾的后一个位置</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> q[N], hh </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, tt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 向队尾插入一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">q[tt </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (tt </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> N) tt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 从队头弹出一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">hh </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (hh </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> N) hh </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 队头的值</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">q[hh];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 判断队列是否为空，如果hh != tt，则表示不为空</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (hh </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> tt)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"单调栈\"><a href=\"#单调栈\" class=\"headerlink\" title=\"单调栈\"></a>单调栈</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/832/\">AcWing 830. 单调栈</a><br>常见模型：找出每个数左边离它最近的比它大/小的数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> tt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (tt </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(stk[tt], i)) tt </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    stk[ </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> tt] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"单调队列\"><a href=\"#单调队列\" class=\"headerlink\" title=\"单调队列\"></a>单调队列</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/156/\">AcWing 154. 滑动窗口</a><br>常见模型：找出滑动窗口中的最大值/最小值</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> hh </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, tt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (hh </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> tt </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">check_out</span><span style=\"color: #F8F8F2\">(q[hh])) hh </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span><span style=\"color: #6272A4\">  // 判断队头是否滑出窗口</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (hh </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> tt </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">(q[tt], i)) tt </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    q[ </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> tt] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"KMP\"><a href=\"#KMP\" class=\"headerlink\" title=\"KMP\"></a>KMP</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/833/\">AcWing 831. KMP字符串</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// s[]是长文本，p[]是模式串，n是s的长度，m是p的长度</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">求模式串的Next数组：</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">, j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> m; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (j </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> p[i] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> p[j </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">]) j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[j];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (p[i] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> p[j </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">]) j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    ne[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> j;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 匹配</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (j </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> s[i] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> p[j </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">]) j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[j];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (s[i] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> p[j </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">]) j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (j </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> m)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[j];</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">        // 匹配成功后的逻辑</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span><span style=\"color: #6272A4\">//C的库函数 strstr()即是如此</span></span></code></pre></div><h2 id=\"Trie树\"><a href=\"#Trie树\" class=\"headerlink\" title=\"Trie树\"></a>Trie树</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/837/\">AcWing 835. Trie字符串统计</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> son[N][</span><span style=\"color: #BD93F9\">26</span><span style=\"color: #F8F8F2\">], cnt[N], idx;</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 0号点既是根节点，又是空节点</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// son[][]存储树中每个节点的子节点</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// cnt[]存储以每个节点结尾的单词数量</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 插入一个字符串</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">insert</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">char</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #FFB86C; font-style: italic\">str</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> p </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; str[i]; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> u </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> str[i] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">'</span><span style=\"color: #F1FA8C\">a</span><span style=\"color: #E9F284\">'</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">son[p][u]) son[p][u] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> idx;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        p </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> son[p][u];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    cnt[p] </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 查询字符串出现的次数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">query</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">char</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #FFB86C; font-style: italic\">str</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> p </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; str[i]; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> u </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> str[i] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">'</span><span style=\"color: #F1FA8C\">a</span><span style=\"color: #E9F284\">'</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">son[p][u]) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        p </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> son[p][u];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> cnt[p];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span><span style=\"color: #6272A4\">//可以用map&lt;string,int&gt;，但时间是两倍以上</span></span></code></pre></div><h2 id=\"并查集\"><a href=\"#并查集\" class=\"headerlink\" title=\"并查集\"></a>并查集</h2><p>—— 模板题[ AcWing 836. 合并集合](<a href=\"https://www.acwing.com/problem/content/838/\">https://www.acwing.com/problem/content/838/</a>, <a href=\"https://www.acwing.com/problem/content/839/\">AcWing 837. 连通块中点的数量</a><br>(1)朴素并查集：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> p[N];</span><span style=\"color: #6272A4\"> //存储每个点的祖宗节点</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 返回x的祖宗节点</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (p[x] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> x) p[x] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(p[x]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> p[x];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 初始化，假定节点编号是1~n</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ) p[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 合并a和b所在的两个集合：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    p[</span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(a)] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(b);</span></span></code></pre></div><p>(2)维护size的并查集：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> p[N], size[N];</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    //p[]存储每个点的祖宗节点, size[]只有祖宗节点的有意义，表示祖宗节点所在集合中的点的数量</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 返回x的祖宗节点</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (p[x] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> x) p[x] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(p[x]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> p[x];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 初始化，假定节点编号是1~n</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        p[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        size[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 合并a和b所在的两个集合：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    size[</span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(b)] </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> size[</span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(a)];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    p[</span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(a)] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(b);</span></span></code></pre></div><p>(3)维护到祖宗节点距离的并查集：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> p[N], d[N];</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    //p[]存储每个点的祖宗节点, d[x]存储x到p[x]的距离</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 返回x的祖宗节点</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (p[x] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> x)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> u </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(p[x]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            d[x] </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> d[p[x]];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            p[x] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> u;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> p[x];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 初始化，假定节点编号是1~n</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        p[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        d[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 合并a和b所在的两个集合：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    p[</span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(a)] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(b);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    d[</span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(a)] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> distance;</span><span style=\"color: #6272A4\"> // 根据具体问题，初始化find(a)的偏移量</span></span></code></pre></div><h2 id=\"堆\"><a href=\"#堆\" class=\"headerlink\" title=\"堆\"></a>堆</h2><p>—— 模板题[ AcWing 838. 堆排序](<a href=\"https://www.acwing.com/problem/content/840/\">https://www.acwing.com/problem/content/840/</a>, <a href=\"https://www.acwing.com/problem/content/841/\">AcWing 839. 模拟堆</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// h[N]存储堆中的值, h[1]是堆顶，x的左儿子是2x, 右儿子是2x + 1</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// ph[k]存储第k个插入的点在堆中的位置</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// hp[k]存储堆中下标是k的点是第几个插入的</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], ph[N], hp[N], size;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 交换两个点，及其映射关系</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">heap_swap</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">swap</span><span style=\"color: #F8F8F2\">(ph[hp[a]],ph[hp[b]]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">swap</span><span style=\"color: #F8F8F2\">(hp[a], hp[b]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">swap</span><span style=\"color: #F8F8F2\">(h[a], h[b]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">down</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">u</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> u;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (u </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> size </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> h[u </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> h[t]) t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> u </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (u </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> size </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> h[u </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> h[t]) t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> u </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (u </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> t)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">heap_swap</span><span style=\"color: #F8F8F2\">(u, t);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">down</span><span style=\"color: #F8F8F2\">(t);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">up</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">u</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (u </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> h[u] </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> h[u </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #50FA7B\">heap_swap</span><span style=\"color: #F8F8F2\">(u, u </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        u </span><span style=\"color: #FF79C6\">&gt;&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// O(n)建堆</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i; i </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> ) </span><span style=\"color: #50FA7B\">down</span><span style=\"color: #F8F8F2\">(i);</span></span></code></pre></div><h2 id=\"哈希\"><a href=\"#哈希\" class=\"headerlink\" title=\"哈希\"></a>哈希</h2><h3 id=\"一般哈希\"><a href=\"#一般哈希\" class=\"headerlink\" title=\"一般哈希\"></a>一般哈希</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/842/\">AcWing 840. 模拟散列表</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) 拉链法</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], e[N], ne[N], idx;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 向哈希表中插入一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">insert</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> k </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> N </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> N) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> N;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        e[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        ne[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[k];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        h[k] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> idx </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 在哈希表中查询某个数是否存在</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> k </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> N </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> N) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> N;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[k]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (e[i] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> x)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) 开放寻址法</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 如果x在哈希表中，返回x的下标；如果x不在哈希表中，返回x应该插入的位置</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> N </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> N) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> N;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (h[t] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> null </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> h[t] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> x)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            t </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (t </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> N) t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> t;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span></code></pre></div><h3 id=\"字符串哈希\"><a href=\"#字符串哈希\" class=\"headerlink\" title=\"字符串哈希\"></a>字符串哈希</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/843/\">AcWing 841. 字符串哈希</a><br>核心思想：将字符串看成P进制数，P的经验值是131或13331，取这两个值的冲突概率低<br>小技巧：取模的数用2^64，这样直接用unsigned long long存储，溢出的结果就是取模的结果</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">typedef</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">unsigned</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">long</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">long</span><span style=\"color: #F8F8F2\"> ULL;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">ULL h[N], p[N];</span><span style=\"color: #6272A4\"> // h[k]存储字符串前k个字母的哈希值, p[k]存储 P^k mod 2^64</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 初始化</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">p[</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    h[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> P </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> str[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    p[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> p[i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> P;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 计算子串 str[l ~ r] 的哈希值</span></span>\n<span class=\"line\"><span style=\"color: #8BE9FD; font-style: italic\">ULL</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">l</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">r</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> h[r] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> h[l </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> p[r </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> l </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"C-STL简介\"><a href=\"#C-STL简介\" class=\"headerlink\" title=\"C++ STL简介\"></a>C++ STL简介</h3><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">vector, 变长数组，倍增的思想</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">()  返回元素个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">empty</span><span style=\"color: #F8F8F2\">()  返回是否为空</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">clear</span><span style=\"color: #F8F8F2\">()  清空</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">front</span><span style=\"color: #F8F8F2\">()</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #50FA7B\">back</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">()</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #50FA7B\">pop_back</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">begin</span><span style=\"color: #F8F8F2\">()</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    []</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    支持比较运算，按字典序</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">pair&lt;int, int&gt;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    first, 第一个元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    second, 第二个元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    支持比较运算，以first为第一关键字，以second为第二关键字（字典序）</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">string，字符串</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    size()/length()  返回字符串长度</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    empty()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    clear()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    substr(起始下标，(子串长度))  返回子串</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    c_str()  返回字符串所在字符数组的起始地址</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">queue, 队列</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    size()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    empty()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    push()  向队尾插入一个元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    front()  返回队头元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    back()  返回队尾元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    pop()  弹出队头元素</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">priority_queue, 优先队列，默认是大根堆</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    size()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    empty()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    push()  插入一个元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    top()  返回堆顶元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    pop()  弹出堆顶元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    定义成小根堆的方式：priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">stack, 栈</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">empty</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">()  向栈顶插入一个元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">top</span><span style=\"color: #F8F8F2\">()  返回栈顶元素</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">pop</span><span style=\"color: #F8F8F2\">()  弹出栈顶元素</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">deque, 双端队列</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">empty</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">clear</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">front</span><span style=\"color: #F8F8F2\">()</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #50FA7B\">back</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">()</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #50FA7B\">pop_back</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">push_front</span><span style=\"color: #F8F8F2\">()</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #50FA7B\">pop_front</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">begin</span><span style=\"color: #F8F8F2\">()</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    []</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">set, map, multiset, multimap, 基于平衡二叉树（红黑树），动态维护有序序列</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    size()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    empty()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    clear()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    begin()/end()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    ++, -- 返回前驱和后继，时间复杂度 O(</span><span style=\"color: #8BE9FD; font-style: italic\">logn</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    set/multiset</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        insert()  插入一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        find()  查找一个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        count()  返回某一个数的个数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        erase()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            (1) 输入是一个数x，删除所有x   O(</span><span style=\"color: #8BE9FD; font-style: italic\">k</span><span style=\"color: #F8F8F2\"> + </span><span style=\"color: #FFB86C; font-style: italic\">logn</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            (2) 输入一个迭代器，删除这个迭代器</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        lower_bound()/upper_bound()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            lower_bound(</span><span style=\"color: #8BE9FD; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)  返回大于等于x的最小的数的迭代器</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            upper_bound(</span><span style=\"color: #8BE9FD; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)  返回大于x的最小的数的迭代器</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    map/multimap</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        insert()  插入的数是一个pair</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        erase()  输入的参数是pair或者迭代器</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        find()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        []  注意multimap不支持此操作。 时间复杂度是 O(</span><span style=\"color: #8BE9FD; font-style: italic\">logn</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        lower_bound()/upper_bound()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">unordered_set, unordered_map, unordered_multiset, unordered_multimap, 哈希表</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    和上面类似，增删改查的时间复杂度是 O(1)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    不支持 lower_bound()/upper_bound()， 迭代器的++，--</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">bitset, 圧位</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    bitset&lt;10000&gt; s;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">~</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">|</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">^</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">&lt;&lt;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">!=</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    []</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    count()  返回有多少个1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    any()  判断是否至少有一个1</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    none()  判断是否全为0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    set()  把所有位置成1</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    set(</span><span style=\"color: #8BE9FD; font-style: italic\">k</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #8BE9FD; font-style: italic\">v</span><span style=\"color: #F8F8F2\">)  将第k位变成v</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    reset()  把所有位变成0</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    flip()  等价于~</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    flip(</span><span style=\"color: #8BE9FD; font-style: italic\">k</span><span style=\"color: #F8F8F2\">) 把第k位取反</span></span></code></pre></div><h1 id=\"搜索与图论\"><a href=\"#搜索与图论\" class=\"headerlink\" title=\"搜索与图论\"></a>搜索与图论</h1><h2 id=\"DFS与BFS\"><a href=\"#DFS与BFS\" class=\"headerlink\" title=\"DFS与BFS\"></a>DFS与BFS</h2><h3 id=\"树与图的存储\"><a href=\"#树与图的存储\" class=\"headerlink\" title=\"树与图的存储\"></a>树与图的存储</h3><p>树是一种特殊的图，与图的存储方式相同。<br>对于无向图中的边ab，存储两条有向边a-&gt;b, b-&gt;a。<br>因此我们可以只考虑有向图的存储。<br>(1) 邻接矩阵：<code>g[a][b]</code> 存储边a-&gt;b<br>(2) 邻接表：</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// 对于每个点k，开一个单链表，存储k所有可以走到的点。h[k]存储这个单链表的头结点</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], e[N], ne[N], idx;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 添加一条边a-&gt;b</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">add</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    e[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> b, ne[idx] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[a], h[a] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> idx </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 初始化</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">idx </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(h, </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, sizeof h);</span></span></code></pre></div><h3 id=\"树与图的遍历\"><a href=\"#树与图的遍历\" class=\"headerlink\" title=\"树与图的遍历\"></a>树与图的遍历</h3><p>时间复杂度 O(n+m), n表示点数，m 表示边数<br>(1) 深度优先遍历 —— 模板题 <a href=\"https://www.acwing.com/problem/content/848/\">AcWing 846. 树的重心</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">dfs</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">u</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    st[u] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\"> // st[u] 表示点u已经被遍历过</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[u]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[j]) </span><span style=\"color: #50FA7B\">dfs</span><span style=\"color: #F8F8F2\">(j);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><p>(2) 宽度优先遍历 —— 模板题 <a href=\"https://www.acwing.com/problem/content/849/\">AcWing 847. 图中点的层次</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">queue</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> q;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">st[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\"> // 表示1号点已经被遍历过</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">q.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (q.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">())</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q.</span><span style=\"color: #50FA7B\">front</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    q.</span><span style=\"color: #50FA7B\">pop</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[t]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[j])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            st[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\"> // 表示点j已经被遍历过</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            q.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">(j);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"树与图的遍历-拓扑排序\"><a href=\"#树与图的遍历-拓扑排序\" class=\"headerlink\" title=\"树与图的遍历 拓扑排序\"></a>树与图的遍历 拓扑排序</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/850/\">AcWing 848. 有向图的拓扑序列</a><br>时间复杂度 O(n+m), n 表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">topsort</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> hh </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, tt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // d[i] 存储点i的入度</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">d[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            q[ </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> tt] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (hh </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> tt)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q[hh </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[t]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> d[j] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                q[ </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> tt] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> j;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 如果所有点都入队了，说明存在拓扑序列；否则不存在拓扑序列。</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> tt </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"最短路径\"><a href=\"#最短路径\" class=\"headerlink\" title=\"最短路径\"></a>最短路径</h2><h3 id=\"朴素dijkstra算法\"><a href=\"#朴素dijkstra算法\" class=\"headerlink\" title=\"朴素dijkstra算法\"></a>朴素dijkstra算法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/851/\">AcWing 849. Dijkstra求最短路 I</a><br>时间复杂是 O(n2+m), n 表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> g[N][N];</span><span style=\"color: #6272A4\">  // 存储每条边</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> dist[N];</span><span style=\"color: #6272A4\">  // 存储1号点到每个点的最短距离</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">   // 存储每个点的最短路是否已经确定</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 求1号点到n号点的最短路，如果不存在则返回-1</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">dijkstra</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(dist, </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f</span><span style=\"color: #F8F8F2\">, sizeof dist);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    dist[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\">     // 在还未确定最短路的点中，寻找距离最小的点</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[j] </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> (t </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">||</span><span style=\"color: #F8F8F2\"> dist[t] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> dist[j]))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> j;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">        // 用t更新其他点的距离</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            dist[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">min</span><span style=\"color: #F8F8F2\">(dist[j], dist[t] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> g[t][j]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        st[t] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[n] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f3f3f3f</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> dist[n];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"堆优化版dijkstra\"><a href=\"#堆优化版dijkstra\" class=\"headerlink\" title=\"堆优化版dijkstra\"></a>堆优化版dijkstra</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/852/\">AcWing 850. Dijkstra求最短路 II</a><br>时间复杂度 O(mlogn), n 表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">typedef</span><span style=\"color: #F8F8F2\"> pair</span><span style=\"color: #FF79C6\">&lt;int</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int&gt;</span><span style=\"color: #F8F8F2\"> PII;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n;</span><span style=\"color: #6272A4\">      // 点的数量</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], w[N], e[N], ne[N], idx;</span><span style=\"color: #6272A4\">       // 邻接表存储所有边</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> dist[N];</span><span style=\"color: #6272A4\">        // 存储所有点到1号点的距离</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">     // 存储每个点的最短距离是否已确定</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 求1号点到n号点的最短距离，如果不存在，则返回-1</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">dijkstra</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(dist, </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f</span><span style=\"color: #F8F8F2\">, sizeof dist);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    dist[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    priority_queue</span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\">PII, vector</span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\">PII</span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\">, greater</span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\">PII</span><span style=\"color: #FF79C6\">&gt;&gt;</span><span style=\"color: #F8F8F2\"> heap;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    heap.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">({</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">});</span><span style=\"color: #6272A4\">      // first存储距离，second存储节点编号</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (heap.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">())</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">auto</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> heap.</span><span style=\"color: #50FA7B\">top</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        heap.</span><span style=\"color: #50FA7B\">pop</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> ver </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> t.second, distance </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> t.first;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (st[ver]) </span><span style=\"color: #FF79C6\">continue</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        st[ver] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[ver]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[j] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> distance </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                dist[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> distance </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                heap.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">({dist[j], j});</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[n] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f3f3f3f</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> dist[n];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"Bellman-Ford算法\"><a href=\"#Bellman-Ford算法\" class=\"headerlink\" title=\"Bellman-Ford算法\"></a>Bellman-Ford算法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/855/\">AcWing 853. 有边数限制的最短路</a><br>时间复杂度 O(nm), n表示点数，m表示边数<br>注意在模板题中需要对下面的模板稍作修改，加上备份数组，详情见模板题。</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n, m;</span><span style=\"color: #6272A4\">       // n表示点数，m表示边数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> dist[N];</span><span style=\"color: #6272A4\">        // dist[x]存储1到x的最短路距离</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">struct</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Edge</span><span style=\"color: #F8F8F2\">     </span><span style=\"color: #6272A4\">// 边，a表示出点，b表示入点，w表示边的权重</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> a, b, w;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}edges[M];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 求1到n的最短路距离，如果无法从1走到n，则返回-1。</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">bellman_ford</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(dist, </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f</span><span style=\"color: #F8F8F2\">, sizeof dist);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    dist[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 如果第n次迭代仍然会松弛三角不等式，就说明存在一条长度是n+1的最短路径，由抽屉原理，路径中至少存在两个相同的点，说明图中存在负权回路。</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> m; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> a </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> edges[j].a, b </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> edges[j].b, w </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> edges[j].w;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[b] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> dist[a] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                dist[b] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> dist[a] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[n] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f3f3f3f</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> dist[n];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"spfa-算法（队列优化的Bellman-Ford算法）\"><a href=\"#spfa-算法（队列优化的Bellman-Ford算法）\" class=\"headerlink\" title=\"spfa 算法（队列优化的Bellman-Ford算法）\"></a>spfa 算法（队列优化的Bellman-Ford算法）</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/853/\">AcWing 851. spfa求最短路</a><br>时间复杂度 平均情况下 O(m)，最坏情况下 O(nm), n表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n;</span><span style=\"color: #6272A4\">      // 总点数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], w[N], e[N], ne[N], idx;</span><span style=\"color: #6272A4\">       // 邻接表存储所有边</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> dist[N];</span><span style=\"color: #6272A4\">        // 存储每个点到1号点的最短距离</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">     // 存储每个点是否在队列中</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 求1号点到n号点的最短路距离，如果从1号点无法走到n号点则返回-1</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">spfa</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(dist, </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f</span><span style=\"color: #F8F8F2\">, sizeof dist);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    dist[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    queue</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> q;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    q.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    st[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (q.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">())</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">auto</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q.</span><span style=\"color: #50FA7B\">front</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        q.</span><span style=\"color: #50FA7B\">pop</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        st[t] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[t]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[j] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> dist[t] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                dist[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> dist[t] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[j])</span><span style=\"color: #6272A4\">     // 如果队列中已存在j，则不需要将j重复插入</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    q.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">(j);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    st[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[n] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f3f3f3f</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> dist[n];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"spfa判断图中是否存在负环\"><a href=\"#spfa判断图中是否存在负环\" class=\"headerlink\" title=\"spfa判断图中是否存在负环\"></a>spfa判断图中是否存在负环</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/854/\">AcWing 852. spfa判断负环</a><br>时间复杂度是 O(nm), n表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n;</span><span style=\"color: #6272A4\">      // 总点数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], w[N], e[N], ne[N], idx;</span><span style=\"color: #6272A4\">       // 邻接表存储所有边</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> dist[N], cnt[N];</span><span style=\"color: #6272A4\">        // dist[x]存储1号点到x的最短距离，cnt[x]存储1到x的最短路中经过的点数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">     // 存储每个点是否在队列中</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 如果存在负环，则返回true，否则返回false。</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">spfa</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 不需要初始化dist数组</span></span>\n<span class=\"line\"><span style=\"color: #6272A4\">    // 原理：如果某条最短路径上有n个点（除了自己），那么加上自己之后一共有n+1个点，由抽屉原理一定有两个点相同，所以存在环。</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    queue</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> q;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        q.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        st[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (q.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">())</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">auto</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> q.</span><span style=\"color: #50FA7B\">front</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        q.</span><span style=\"color: #50FA7B\">pop</span><span style=\"color: #F8F8F2\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        st[t] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[t]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (dist[j] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> dist[t] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                dist[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> dist[t] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> w[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                cnt[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> cnt[t] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (cnt[j] </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> n) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\">       // 如果从1号点到x的最短路中包含至少n个点（不包括自己），则说明存在环</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[j])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    q.</span><span style=\"color: #50FA7B\">push</span><span style=\"color: #F8F8F2\">(j);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    st[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"floyd算法\"><a href=\"#floyd算法\" class=\"headerlink\" title=\"floyd算法\"></a>floyd算法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/856/\">AcWing 854. Floyd求最短路</a><br>时间复杂度是 O(n3), n 表示点数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">初始化：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> j) d[i][j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> d[i][j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> INF;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 算法结束后，d[a][b]表示a到b的最短距离</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">floyd</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> k </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; k </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; k </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                d[i][j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">min</span><span style=\"color: #F8F8F2\">(d[i][j], d[i][k] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> d[k][j]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"最小生成树\"><a href=\"#最小生成树\" class=\"headerlink\" title=\"最小生成树\"></a>最小生成树</h2><h3 id=\"朴素版prim算法\"><a href=\"#朴素版prim算法\" class=\"headerlink\" title=\"朴素版prim算法\"></a>朴素版prim算法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/860/\">AcWing 858. Prim算法求最小生成树</a><br>时间复杂度是 O(n2+m), n 表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n;</span><span style=\"color: #6272A4\">      // n表示点数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> g[N][N];</span><span style=\"color: #6272A4\">        // 邻接矩阵，存储所有边</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> dist[N];</span><span style=\"color: #6272A4\">        // 存储其他点到当前最小生成树的距离</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">     // 存储每个点是否已经在生成树中</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 如果图不连通，则返回INF(值是0x3f3f3f3f), 否则返回最小生成树的树边权重之和</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">prim</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(dist, </span><span style=\"color: #FF79C6\">0x</span><span style=\"color: #BD93F9\">3f</span><span style=\"color: #F8F8F2\">, sizeof dist);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[j] </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> (t </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">||</span><span style=\"color: #F8F8F2\"> dist[t] </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> dist[j]))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> j;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> dist[t] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> INF) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> INF;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i) res </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> dist[t];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        st[t] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ) dist[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">min</span><span style=\"color: #F8F8F2\">(dist[j], g[t][j]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"Kruskal算法\"><a href=\"#Kruskal算法\" class=\"headerlink\" title=\"Kruskal算法\"></a>Kruskal算法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/861/\">AcWing 859. Kruskal算法求最小生成树</a><br>时间复杂度是 O(mlogm), n表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n, m;</span><span style=\"color: #6272A4\">       // n是点数，m是边数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> p[N];</span><span style=\"color: #6272A4\">       // 并查集的父节点数组</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">struct</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Edge</span><span style=\"color: #F8F8F2\">     </span><span style=\"color: #6272A4\">// 存储边</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> a, b, w;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">operator</span><span style=\"color: #F8F8F2\">&lt; (</span><span style=\"color: #FF79C6\">const</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #8BE9FD; font-style: italic\">Edge</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">W</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #FF79C6\">const</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> w </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> W.w;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}edges[M];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\">     // 并查集核心操作</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (p[x] </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> x) p[x] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(p[x]);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> p[x];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">kruskal</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">sort</span><span style=\"color: #F8F8F2\">(edges, edges </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> m);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ) p[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span><span style=\"color: #6272A4\">    // 初始化并查集</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, cnt </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> m; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> a </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> edges[i].a, b </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> edges[i].b, w </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> edges[i].w;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        a </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(a), b </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(b);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (a </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> b)</span><span style=\"color: #6272A4\">     // 如果两个连通块不连通，则将这两个连通块合并</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            p[a] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> b;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            res </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> w;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            cnt </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (cnt </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> INF;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"二分图\"><a href=\"#二分图\" class=\"headerlink\" title=\"二分图\"></a>二分图</h2><h3 id=\"染色法判别二分图\"><a href=\"#染色法判别二分图\" class=\"headerlink\" title=\"染色法判别二分图\"></a>染色法判别二分图</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/862/\">AcWing 860. 染色法判定二分图</a><br>时间复杂度是 O(n+m), n表示点数，m表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n;</span><span style=\"color: #6272A4\">      // n表示点数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], e[M], ne[M], idx;</span><span style=\"color: #6272A4\">     // 邻接表存储图</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> color[N];</span><span style=\"color: #6272A4\">       // 表示每个点的颜色，-1表示未染色，0表示白色，1表示黑色</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 参数：u表示当前节点，c表示当前点的颜色</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">dfs</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">u</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">c</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    color[u] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> c;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[u]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (color[j] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #50FA7B\">dfs</span><span style=\"color: #F8F8F2\">(j, </span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">c)) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (color[j] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> c) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">check</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(color, </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, sizeof color);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> flag </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (color[i] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #50FA7B\">dfs</span><span style=\"color: #F8F8F2\">(i, </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                flag </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">break</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> flag;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"匈牙利算法\"><a href=\"#匈牙利算法\" class=\"headerlink\" title=\"匈牙利算法\"></a>匈牙利算法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/863/\">AcWing 861. 二分图的最大匹配</a><br>时间复杂度是 O(nm), n表示点数，m 表示边数</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> n1, n2;</span><span style=\"color: #6272A4\">     // n1表示第一个集合中的点数，n2表示第二个集合中的点数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> h[N], e[M], ne[M], idx;</span><span style=\"color: #6272A4\">     // 邻接表存储所有边，匈牙利算法中只会用到从第一个集合指向第二个集合的边，所以这里只用存一个方向的边</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> match[N];</span><span style=\"color: #6272A4\">       // 存储第二个集合中的每个点当前匹配的第一个集合中的点是哪个</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">     // 表示第二个集合中的每个点是否已经被遍历过</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> h[x]; i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> ne[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> e[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[j])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            st[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (match[j] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">||</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(match[j]))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                match[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 求最大匹配数，依次枚举第一个集合中的每个点能否匹配第二个集合中的点</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n1; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">memset</span><span style=\"color: #F8F8F2\">(st, </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">, sizeof st);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">find</span><span style=\"color: #F8F8F2\">(i)) res </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h1 id=\"数学知识\"><a href=\"#数学知识\" class=\"headerlink\" title=\"数学知识\"></a>数学知识</h1><h2 id=\"质数\"><a href=\"#质数\" class=\"headerlink\" title=\"质数\"></a>质数</h2><h3 id=\"试除法判定质数\"><a href=\"#试除法判定质数\" class=\"headerlink\" title=\"试除法判定质数\"></a>试除法判定质数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/868/\">AcWing 866. 试除法判定质数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">is_prime</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">false</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"试除法分解质因数\"><a href=\"#试除法分解质因数\" class=\"headerlink\" title=\"试除法分解质因数\"></a>试除法分解质因数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/869/\">AcWing 867. 分解质因数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">divide</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> s </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) x </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> i, s </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            cout </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">'</span><span style=\"color: #F1FA8C\"> </span><span style=\"color: #E9F284\">'</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> s </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> endl;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) cout </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #E9F284\">'</span><span style=\"color: #F1FA8C\"> </span><span style=\"color: #E9F284\">'</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> endl;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    cout </span><span style=\"color: #FF79C6\">&lt;&lt;</span><span style=\"color: #F8F8F2\"> endl;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"朴素筛法求素数\"><a href=\"#朴素筛法求素数\" class=\"headerlink\" title=\"朴素筛法求素数\"></a>朴素筛法求素数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/870/\">AcWing 868. 筛质数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> primes[N], cnt;</span><span style=\"color: #6272A4\">     // primes[]存储所有素数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">         // st[x]存储x是否被筛掉</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get_primes</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">n</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (st[i]) </span><span style=\"color: #FF79C6\">continue</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        primes[cnt </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> i; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> i)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            st[j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"线性筛法求素数\"><a href=\"#线性筛法求素数\" class=\"headerlink\" title=\"线性筛法求素数\"></a>线性筛法求素数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/870/\">AcWing 868. 筛质数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> primes[N], cnt;</span><span style=\"color: #6272A4\">     // primes[]存储所有素数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">         // st[x]存储x是否被筛掉</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get_primes</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">n</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[i]) primes[cnt </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; primes[j] </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            st[primes[j] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> primes[j] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">break</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"约数\"><a href=\"#约数\" class=\"headerlink\" title=\"约数\"></a>约数</h2><h3 id=\"试除法求所有约数\"><a href=\"#试除法求所有约数\" class=\"headerlink\" title=\"试除法求所有约数\"></a>试除法求所有约数</h3><p>—— 模板题<a href=\"https://www.acwing.com/problem/content/871/\"> AcWing 869. 试除法求约数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #50FA7B\">get_divisors</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            res.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(i);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">!=</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i) res.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(x </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">sort</span><span style=\"color: #F8F8F2\">(res.</span><span style=\"color: #50FA7B\">begin</span><span style=\"color: #F8F8F2\">(), res.</span><span style=\"color: #50FA7B\">end</span><span style=\"color: #F8F8F2\">());</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"约数个数和约数之和\"><a href=\"#约数个数和约数之和\" class=\"headerlink\" title=\"约数个数和约数之和\"></a>约数个数和约数之和</h3><p>—— 模板题 [AcWing 870. 约数个数](<a href=\"https://www.acwing.com/problem/content/872/\">https://www.acwing.com/problem/content/872/</a>, <a href=\"https://www.acwing.com/problem/content/873/\">AcWing 871. 约数之和</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">如果 N </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> p1</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #F8F8F2\">c1 </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> p2</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #F8F8F2\">c2 </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> ... </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\">pk</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #F8F8F2\">ck</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">约数个数： (c1 </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> (c2 </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> ... </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> (ck </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">约数之和： (p1</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> p1</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> ... </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> p1</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #F8F8F2\">c1) </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> ... </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> (pk</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> pk</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> ... </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> pk</span><span style=\"color: #FF79C6\">^</span><span style=\"color: #F8F8F2\">ck)</span></span></code></pre></div><h3 id=\"欧几里得算法\"><a href=\"#欧几里得算法\" class=\"headerlink\" title=\"欧几里得算法\"></a>欧几里得算法</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/874/\">AcWing 872. 最大公约数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">gcd</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> b </span><span style=\"color: #FF79C6\">?</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">gcd</span><span style=\"color: #F8F8F2\">(b, a </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> b) </span><span style=\"color: #FF79C6\">:</span><span style=\"color: #F8F8F2\"> a;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"欧拉函数\"><a href=\"#欧拉函数\" class=\"headerlink\" title=\"欧拉函数\"></a>欧拉函数</h2><h3 id=\"求欧拉函数\"><a href=\"#求欧拉函数\" class=\"headerlink\" title=\"求欧拉函数\"></a>求欧拉函数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/875/\">AcWing 873. 欧拉函数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">phi</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) x </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> (x </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"筛法求欧拉函数\"><a href=\"#筛法求欧拉函数\" class=\"headerlink\" title=\"筛法求欧拉函数\"></a>筛法求欧拉函数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/876/\">AcWing 874. 筛法求欧拉函数</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> primes[N], cnt;</span><span style=\"color: #6272A4\">     // primes[]存储所有素数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> euler[N];</span><span style=\"color: #6272A4\">           // 存储每个数的欧拉函数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">         // st[x]存储x是否被筛掉</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get_eulers</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">n</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    euler[</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[i])</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            primes[cnt </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            euler[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; primes[j] </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> primes[j] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            st[t] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> primes[j] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                euler[t] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> euler[i] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> primes[j];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">break</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            euler[t] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> euler[i] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> (primes[j] </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"快速幂\"><a href=\"#快速幂\" class=\"headerlink\" title=\"快速幂\"></a>快速幂</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/877/\">AcWing 875. 快速幂</a><br>求 m^k mod p，时间复杂度 O(logk)。</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">qmi</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">m</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">k</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">p</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p, t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> m;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (k)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (k</span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        k </span><span style=\"color: #FF79C6\">&gt;&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"扩展欧几里得算法\"><a href=\"#扩展欧几里得算法\" class=\"headerlink\" title=\"扩展欧几里得算法\"></a>扩展欧几里得算法</h2><p>—— 模板题<a href=\"https://www.acwing.com/problem/content/879/\"> AcWing 877. 扩展欧几里得算法</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// 求x, y，使得ax + by = gcd(a, b)</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">exgcd</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">x</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #FFB86C; font-style: italic\">y</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">b)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        x </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; y </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> a;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> d </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">exgcd</span><span style=\"color: #F8F8F2\">(b, a </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> b, y, x);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    y </span><span style=\"color: #FF79C6\">-=</span><span style=\"color: #F8F8F2\"> (a</span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\">b) </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> x;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> d;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"高斯消元\"><a href=\"#高斯消元\" class=\"headerlink\" title=\"高斯消元\"></a>高斯消元</h2><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/885/\">AcWing 883. 高斯消元解线性方程组</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// a[N][N]是增广矩阵</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">gauss</span><span style=\"color: #F8F8F2\">()</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> c, r;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (c </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">, r </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; c </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; c </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span><span style=\"color: #6272A4\">   // 找到绝对值最大的行</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">fabs</span><span style=\"color: #F8F8F2\">(a[i][c]) </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">fabs</span><span style=\"color: #F8F8F2\">(a[t][c]))</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">fabs</span><span style=\"color: #F8F8F2\">(a[t][c]) </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> eps) </span><span style=\"color: #FF79C6\">continue</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> c; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ) </span><span style=\"color: #50FA7B\">swap</span><span style=\"color: #F8F8F2\">(a[t][i], a[r][i]);</span><span style=\"color: #6272A4\">      // 将绝对值最大的行换到最顶端</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> c; i </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> ) a[r][i] </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> a[r][c];</span><span style=\"color: #6272A4\">      // 将当前行的首位变成1</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span><span style=\"color: #6272A4\">       // 用当前行将下面所有的列消成0</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">fabs</span><span style=\"color: #F8F8F2\">(a[i][c]) </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> eps)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> c; j </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                    a[i][j] </span><span style=\"color: #FF79C6\">-=</span><span style=\"color: #F8F8F2\"> a[r][j] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> a[i][c];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        r </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (r </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> r; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #50FA7B\">fabs</span><span style=\"color: #F8F8F2\">(a[i][n]) </span><span style=\"color: #FF79C6\">&gt;</span><span style=\"color: #F8F8F2\"> eps)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">                </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\"> // 无解</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\"> // 有无穷多组解</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> n; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            a[i][n] </span><span style=\"color: #FF79C6\">-=</span><span style=\"color: #F8F8F2\"> a[i][j] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> a[j][n];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\"> // 有唯一解</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h2 id=\"组合计数\"><a href=\"#组合计数\" class=\"headerlink\" title=\"组合计数\"></a>组合计数</h2><h3 id=\"递推法求组合数\"><a href=\"#递推法求组合数\" class=\"headerlink\" title=\"递推法求组合数\"></a>递推法求组合数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/887/\">AcWing 885. 求组合数 I</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6272A4\">// c[a][b] 表示从a个苹果中选b个的方案数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> N; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> i; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">j) c[i][j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">else</span><span style=\"color: #F8F8F2\"> c[i][j] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (c[i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">][j] </span><span style=\"color: #FF79C6\">+</span><span style=\"color: #F8F8F2\"> c[i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">][j </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">]) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> mod;</span></span></code></pre></div><h3 id=\"通过预处理逆元的方式求组合数\"><a href=\"#通过预处理逆元的方式求组合数\" class=\"headerlink\" title=\"通过预处理逆元的方式求组合数\"></a>通过预处理逆元的方式求组合数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/888/\">AcWing 886. 求组合数 II</a><br>首先预处理出所有阶乘取模的余数<code>fact[N]</code>，以及所有阶乘取模的逆元<code>infact[N]</code><br>如果取模的数是质数，可以用费马小定理求逆元</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">qmi</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">k</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">p</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\">    // 快速幂模板</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (k)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (k </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL)res </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> a </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        a </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL)a </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> a </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        k </span><span style=\"color: #FF79C6\">&gt;&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6272A4\">// 预处理阶乘的余数和阶乘逆元的余数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">fact[</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> infact[</span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> N; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    fact[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL)fact[i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> mod;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    infact[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL)infact[i </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">qmi</span><span style=\"color: #F8F8F2\">(i, mod </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">, mod) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> mod;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"Lucas定理\"><a href=\"#Lucas定理\" class=\"headerlink\" title=\"Lucas定理\"></a>Lucas定理</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/889/\">AcWing 887. 求组合数 III</a></p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F8F8F2\">若p是质数，则对于任意整数 </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> m </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n，有：</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #50FA7B\">C</span><span style=\"color: #F8F8F2\">(n, m) </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">C</span><span style=\"color: #F8F8F2\">(n </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p, m </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p) </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">C</span><span style=\"color: #F8F8F2\">(n </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> p, m </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> p) (mod p)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">qmi</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">k</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">p</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\">  // 快速幂模板</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (k)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (k </span><span style=\"color: #FF79C6\">&amp;</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">) res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL)res </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> a </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        a </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL)a </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> a </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        k </span><span style=\"color: #FF79C6\">&gt;&gt;=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">C</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">p</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\">  // 通过定理求组合数C(a, b)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (a </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> b) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    LL x </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">, y </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">;</span><span style=\"color: #6272A4\">  // x是分子，y是分母</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> a, j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> b; i </span><span style=\"color: #FF79C6\">--</span><span style=\"color: #F8F8F2\">, j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        x </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL)x </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        y </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> (LL) y </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> x </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> (LL)</span><span style=\"color: #50FA7B\">qmi</span><span style=\"color: #F8F8F2\">(y, p </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">, p) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">lucas</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">LL</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #8BE9FD; font-style: italic\">LL</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">p</span><span style=\"color: #F8F8F2\">)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (a </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> p </span><span style=\"color: #FF79C6\">&amp;&amp;</span><span style=\"color: #F8F8F2\"> b </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> p) </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">C</span><span style=\"color: #F8F8F2\">(a, b, p);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> (LL)</span><span style=\"color: #50FA7B\">C</span><span style=\"color: #F8F8F2\">(a </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p, b </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p, p) </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">lucas</span><span style=\"color: #F8F8F2\">(a </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> p, b </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> p, p) </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span></code></pre></div><h3 id=\"分解质因数法求组合数\"><a href=\"#分解质因数法求组合数\" class=\"headerlink\" title=\"分解质因数法求组合数\"></a>分解质因数法求组合数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/890/\">AcWing 888. 求组合数 IV</a><br>当我们需要求出组合数的真实值，而非对某个数的余数时，分解质因数的方式比较好用：<br>    1. 筛法求出范围内的所有质数<br>    2. 通过 C(a, b) = a! / b! / (a - b)! 这个公式求出每个质因子的次数。 n! 中p的次数是 n / p + n / p^2 + n / p^3 + …<br>    3. 用高精度乘法将所有质因子相乘</p>\n<div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\" onclick=\"copyCode(this)\"></button><span class=\"lang\">cpp</span><pre class=\"shiki dracula\" style=\"background-color: #282A36\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> primes[N], cnt;</span><span style=\"color: #6272A4\">     // 存储所有质数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> sum[N];</span><span style=\"color: #6272A4\">     // 存储每个质数的次数</span></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">bool</span><span style=\"color: #F8F8F2\"> st[N];</span><span style=\"color: #6272A4\">     // 存储每个数是否已被筛掉</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">void</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get_primes</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">n</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\">      // 线性筛法求素数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">2</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">!</span><span style=\"color: #F8F8F2\">st[i]) primes[cnt </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> ] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> i;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; primes[j] </span><span style=\"color: #FF79C6\">&lt;=</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> i; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            st[primes[j] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">true</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">            </span><span style=\"color: #FF79C6\">if</span><span style=\"color: #F8F8F2\"> (i </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> primes[j] </span><span style=\"color: #FF79C6\">==</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">) </span><span style=\"color: #FF79C6\">break</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">n</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">p</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\">       // 求n！中的次数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (n)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        res </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> n </span><span style=\"color: #FF79C6\">/</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        n </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> p;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #50FA7B\">mul</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #8BE9FD; font-style: italic\">vector</span><span style=\"color: #F8F8F2\">&lt;</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\">&gt; </span><span style=\"color: #FFB86C; font-style: italic\">a</span><span style=\"color: #F8F8F2\">, </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #FFB86C; font-style: italic\">b</span><span style=\"color: #F8F8F2\">)</span><span style=\"color: #6272A4\">       // 高精度乘低精度模板</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> c;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> t </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> a.</span><span style=\"color: #50FA7B\">size</span><span style=\"color: #F8F8F2\">(); i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">+=</span><span style=\"color: #F8F8F2\"> a[i] </span><span style=\"color: #FF79C6\">*</span><span style=\"color: #F8F8F2\"> b;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        c.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(t </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">while</span><span style=\"color: #F8F8F2\"> (t)</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    {</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        c.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(t </span><span style=\"color: #FF79C6\">%</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        t </span><span style=\"color: #FF79C6\">/=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">10</span><span style=\"color: #F8F8F2\">;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">return</span><span style=\"color: #F8F8F2\"> c;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #50FA7B\">get_primes</span><span style=\"color: #F8F8F2\">(a);</span><span style=\"color: #6272A4\">  // 预处理范围内的所有质数</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> cnt; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span><span style=\"color: #6272A4\">     // 求每个质因数的次数</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">{</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> p </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> primes[i];</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    sum[i] </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get</span><span style=\"color: #F8F8F2\">(a, p) </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get</span><span style=\"color: #F8F8F2\">(b, p) </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">get</span><span style=\"color: #F8F8F2\">(a </span><span style=\"color: #FF79C6\">-</span><span style=\"color: #F8F8F2\"> b, p);</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">vector</span><span style=\"color: #FF79C6\">&lt;int&gt;</span><span style=\"color: #F8F8F2\"> res;</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">res.</span><span style=\"color: #50FA7B\">push_back</span><span style=\"color: #F8F8F2\">(</span><span style=\"color: #BD93F9\">1</span><span style=\"color: #F8F8F2\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> i </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; i </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> cnt; i </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span><span style=\"color: #6272A4\">     // 用高精度乘法将所有质因子相乘</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">    </span><span style=\"color: #FF79C6\">for</span><span style=\"color: #F8F8F2\"> (</span><span style=\"color: #FF79C6\">int</span><span style=\"color: #F8F8F2\"> j </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #BD93F9\">0</span><span style=\"color: #F8F8F2\">; j </span><span style=\"color: #FF79C6\">&lt;</span><span style=\"color: #F8F8F2\"> sum[i]; j </span><span style=\"color: #FF79C6\">++</span><span style=\"color: #F8F8F2\"> )</span></span>\n<span class=\"line\"><span style=\"color: #F8F8F2\">        res </span><span style=\"color: #FF79C6\">=</span><span style=\"color: #F8F8F2\"> </span><span style=\"color: #50FA7B\">mul</span><span style=\"color: #F8F8F2\">(res, primes[i]);</span></span></code></pre></div><h2 id=\"博弈论\"><a href=\"#博弈论\" class=\"headerlink\" title=\"博弈论\"></a>博弈论</h2><h3 id=\"卡特兰数\"><a href=\"#卡特兰数\" class=\"headerlink\" title=\"卡特兰数\"></a>卡特兰数</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/891/\">AcWing 889. 满足条件的01序列</a><br>给定n个0和n个1，它们按照某种顺序排成长度为2n的序列，满足任意前缀中0的个数都不少于1的个数的序列的数量为： Cat(n) = C(2n, n) / (n + 1)<br>NIM游戏 —— 模板题 AcWing 891. Nim游戏<br>给定N堆物品，第i堆物品有Ai个。两名玩家轮流行动，每次可以任选一堆，取走任意多个物品，可把一堆取光，但不能不取。取走最后一件物品者获胜。两人都采取最优策略，问先手是否必胜。</p>\n<p>我们把这种游戏称为NIM博弈。把游戏过程中面临的状态称为局面。整局游戏第一个行动的称为先手，第二个行动的称为后手。若在某一局面下无论采取何种行动，都会输掉游戏，则称该局面必败。<br>所谓采取最优策略是指，若在某一局面下存在某种行动，使得行动后对面面临必败局面，则优先采取该行动。同时，这样的局面被称为必胜。我们讨论的博弈问题一般都只考虑理想情况，即两人均无失误，都采取最优策略行动时游戏的结果。<br>NIM博弈不存在平局，只有先手必胜和先手必败两种情况。</p>\n<p>定理： NIM博弈先手必胜，当且仅当 A1 ^ A2 ^ … ^ An != 0</p>\n<h3 id=\"公平组合游戏ICG\"><a href=\"#公平组合游戏ICG\" class=\"headerlink\" title=\"公平组合游戏ICG\"></a>公平组合游戏ICG</h3><p>若一个游戏满足：<br>由两名玩家交替行动；<br>在游戏进程的任意时刻，可以执行的合法行动与轮到哪名玩家无关；<br>不能行动的玩家判负；<br>则称该游戏为一个公平组合游戏。<br>NIM博弈属于公平组合游戏，但城建的棋类游戏，比如围棋，就不是公平组合游戏。因为围棋交战双方分别只能落黑子和白子，胜负判定也比较复杂，不满足条件2和条件3。</p>\n<h3 id=\"有向图游戏\"><a href=\"#有向图游戏\" class=\"headerlink\" title=\"有向图游戏\"></a>有向图游戏</h3><p>给定一个有向无环图，图中有一个唯一的起点，在起点上放有一枚棋子。两名玩家交替地把这枚棋子沿有向边进行移动，每次可以移动一步，无法移动者判负。该游戏被称为有向图游戏。<br>任何一个公平组合游戏都可以转化为有向图游戏。具体方法是，把每个局面看成图中的一个节点，并且从每个局面向沿着合法行动能够到达的下一个局面连有向边。</p>\n<h3 id=\"Mex运算\"><a href=\"#Mex运算\" class=\"headerlink\" title=\"Mex运算\"></a>Mex运算</h3><p>设S表示一个非负整数集合。定义mex(S)为求出不属于集合S的最小非负整数的运算，即：<br>mex(S) = min{x}, x属于自然数，且x不属于S</p>\n<h3 id=\"SG函数\"><a href=\"#SG函数\" class=\"headerlink\" title=\"SG函数\"></a>SG函数</h3><p>在有向图游戏中，对于每个节点x，设从x出发共有k条有向边，分别到达节点y1, y2, …, yk，定义SG(x)为x的后继节点y1, y2, …, yk 的SG函数值构成的集合再执行mex(S)运算的结果，即：<br>SG(x) = mex({SG(y1), SG(y2), …, SG(yk)})<br>特别地，整个有向图游戏G的SG函数值被定义为有向图游戏起点s的SG函数值，即SG(G) = SG(s)。</p>\n<h3 id=\"有向图游戏的和\"><a href=\"#有向图游戏的和\" class=\"headerlink\" title=\"有向图游戏的和\"></a>有向图游戏的和</h3><p>—— 模板题 <a href=\"https://www.acwing.com/problem/content/895/\">AcWing 893. 集合-Nim游戏</a><br>设G1, G2, …, Gm 是m个有向图游戏。定义有向图游戏G，它的行动规则是任选某个有向图游戏Gi，并在Gi上行动一步。G被称为有向图游戏G1, G2, …, Gm的和。<br>有向图游戏的和的SG函数值等于它包含的各个子游戏SG函数值的异或和，即：<br>SG(G) = SG(G1) ^ SG(G2) ^ … ^ SG(Gm)<br><strong>定理</strong><br>有向图游戏的某个局面必胜，当且仅当该局面对应节点的SG函数值大于0。<br>有向图游戏的某个局面必败，当且仅当该局面对应节点的SG函数值等于0。</p>\n<h1 id=\"数据范围\"><a href=\"#数据范围\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h1><p>一般ACM或者笔试题的时间限制是1秒或2秒。在这种情况下，C++代码中的操作次数控制在<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.25ex\" height=\"2.02ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -871.1 1436.6 893.1\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path></g></g></g></g></svg></mjx-container>∼<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.25ex\" height=\"2.005ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 1436.6 886\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path></g></g></g></g></svg></mjx-container>为最佳。下面给出在不同数据范围下，代码的时间复杂度和算法该如何选择：<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.637ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2933.6 804\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g></g></g></svg></mjx-container>, 指数级别, dfs+剪枝，状态压缩dp<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.377ex\" height=\"2.451ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.2 8122.7 1083.2\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(3711.3,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(5545.1,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6308.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(6697.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(633,363) scale(0.707)\"><path data-c=\"33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(7733.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，floyd，dp，高斯消元<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.508ex\" height=\"2.452ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 8622.7 1083.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4211.3,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(6045.1,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6808.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(7197.1,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(633,363) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(8233.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.04ex\" height=\"2.452ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 4437.6 1083.9\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1152,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(633,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g></g><g data-mml-node=\"mi\" transform=\"translate(2188.6,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2486.6,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2971.6,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3448.6,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4048.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，dp，二分，朴素版Dijkstra、朴素版Prim、Bellman-Ford<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.574ex\" height=\"2.473ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -843 10861.6 1093\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2000,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(4711.3,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(6545.1,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7308.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7697.1,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8519.3,0)\"><path data-c=\"B7\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(9019.6,0)\"><g transform=\"translate(853,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,-17)\"><path data-c=\"221A\" d=\"M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z\"></path></g><rect width=\"600\" height=\"60\" x=\"853\" y=\"723\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(10472.6,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，块状链表、分块、莫队<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.991ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 11046.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2500,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5211.3,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(7045.1,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7808.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8197.1,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8797.1,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9095.1,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9580.1,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10057.1,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(10657.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>=&gt;各种sort，线段树、树状数组、set/map、heap、拓扑排序、dijkstra+heap、prim+heap、Kruskal、spfa、求凸包、求半平面交、二分、CDQ分治、整体二分、后缀数组、树链剖分、动态树<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.914ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9686.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(3000,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(5711.3,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(7545.1,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8308.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8697.1,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9297.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>, 以及常数较小的O(nlogn)算法=&gt;单调队列、hash、双指针扫描、并查集，kmp、AC自动机，常数比较小的O(nlogn)的做法：sort、树状数组、heap、dijkstra、spfa<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.046ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 10186.1 1000\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1933.6,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(3000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(3500,0)\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6211.3,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(8045.1,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8808.1,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9197.1,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(9797.1,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，双指针扫描、kmp、AC自动机、线性筛素数<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"19.176ex\" height=\"2.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 8475.7 1114\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1933.6,0)\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(3647.9,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(5481.7,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6244.7,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"msqrt\" transform=\"translate(6633.7,0)\"><g transform=\"translate(853,0)\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(0,-17)\"><path data-c=\"221A\" d=\"M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z\"></path></g><rect width=\"600\" height=\"60\" x=\"853\" y=\"723\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(8086.7,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，判断质数<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.896ex\" height=\"2.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 9236.2 1114\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1933.6,0)\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1033,393.1) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\" transform=\"translate(500,0)\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4001.4,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(5835.2,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(6598.2,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(6987.2,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7285.2,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(7770.2,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8247.2,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8847.2,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，最大公约数，快速幂，数位DP<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.244ex\" height=\"2.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 11157.9 1114\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1933.6,0)\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1033,393.1) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4708.5,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(6542.3,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7305.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(7694.3,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8083.3,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8381.3,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8866.3,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9343.3,0)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(9943.3,0)\"><g data-mml-node=\"mo\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(422,363) scale(0.707)\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></g></g><g data-mml-node=\"mo\" transform=\"translate(10768.9,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，高精度加减乘除<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32.558ex\" height=\"2.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 14390.4 1114\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(877.8,0)\"><path data-c=\"2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g data-mml-node=\"msup\" transform=\"translate(1933.6,0)\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1033,393.1) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2500,0)\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5415.7,0)\"><g data-mml-node=\"text\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><path data-c=\"3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path></g></g><g data-mml-node=\"mi\" transform=\"translate(7249.4,0)\"><path data-c=\"1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(8012.4,0)\"><path data-c=\"28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8401.4,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(8699.4,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9184.4,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(9661.4,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10182.4,0)\"><path data-c=\"D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(10960.4,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11258.4,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(11743.4,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(12220.4,0)\"><path data-c=\"1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(12518.4,0)\"><path data-c=\"1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13003.4,0)\"><path data-c=\"1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13480.4,0)\"><path data-c=\"1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g><g data-mml-node=\"mo\" transform=\"translate(14001.4,0)\"><path data-c=\"29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></g></g></g></svg></mjx-container>，k表示位数，FFT/NTT</p>\n<p><a href=\"https://www.acwing.com/blog/content/26305/\">清风的算法主页</a></p>\n","text":"图论 动态规划 基础算法排序快速排序算法模板—— 模板题 AcWing 785. 快速排序 cppvoid quick_sort(int q[], int l,...","link":"","photos":[],"count_time":{"symbolsCount":"32k","symbolsTime":"29 mins."},"categories":[{"name":"算法编程","slug":"算法编程","count":2,"path":"api/categories/算法编程.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">基础算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">快速排序算法模板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">归并排序算法模板</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%88%86\"><span class=\"toc-text\">二分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0%E4%BA%8C%E5%88%86%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">整数二分算法模板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E6%95%B0%E4%BA%8C%E5%88%86%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">浮点数二分算法模板</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6\"><span class=\"toc-text\">高精度</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95\"><span class=\"toc-text\">高精度加法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%87%8F%E6%B3%95\"><span class=\"toc-text\">高精度减法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E4%BD%8E%E7%B2%BE%E5%BA%A6\"><span class=\"toc-text\">高精度乘低精度</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E9%99%A4%E4%BB%A5%E4%BD%8E%E7%B2%BE%E5%BA%A6\"><span class=\"toc-text\">高精度除以低精度</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BC%80%E4%B8%8E%E5%B7%AE%E5%88%86\"><span class=\"toc-text\">前缀与差分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C\"><span class=\"toc-text\">一维前缀和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C\"><span class=\"toc-text\">二维前缀和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E5%B7%AE%E5%88%86\"><span class=\"toc-text\">一维差分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BB%B4%E5%B7%AE%E5%88%86\"><span class=\"toc-text\">二维差分</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%8D%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">位运算</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E6%8C%87%E9%92%88%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">双指针算法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A6%BB%E6%95%A3%E5%8C%96\"><span class=\"toc-text\">离散化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6\"><span class=\"toc-text\">区间合并</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">数据结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%A1%A8%E4%B8%8E%E9%82%BB%E6%8E%A5%E8%A1%A8%EF%BC%9A%E6%A0%91%E4%B8%8E%E5%9B%BE%E7%9A%84%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">链表与邻接表：树与图的存储</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">单链表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">双链表</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97%EF%BC%9A%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E3%80%81%E5%8D%95%E8%B0%83%E6%A0%88\"><span class=\"toc-text\">栈与队列：单调队列、单调栈</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%88\"><span class=\"toc-text\">栈</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%98%9F%E5%88%97\"><span class=\"toc-text\">队列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%B0%83%E6%A0%88\"><span class=\"toc-text\">单调栈</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97\"><span class=\"toc-text\">单调队列</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#KMP\"><span class=\"toc-text\">KMP</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Trie%E6%A0%91\"><span class=\"toc-text\">Trie树</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E6%9F%A5%E9%9B%86\"><span class=\"toc-text\">并查集</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A0%86\"><span class=\"toc-text\">堆</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%88%E5%B8%8C\"><span class=\"toc-text\">哈希</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E8%88%AC%E5%93%88%E5%B8%8C\"><span class=\"toc-text\">一般哈希</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C\"><span class=\"toc-text\">字符串哈希</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#C-STL%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">C++ STL简介</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%BE%E8%AE%BA\"><span class=\"toc-text\">搜索与图论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DFS%E4%B8%8EBFS\"><span class=\"toc-text\">DFS与BFS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%91%E4%B8%8E%E5%9B%BE%E7%9A%84%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">树与图的存储</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%91%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86\"><span class=\"toc-text\">树与图的遍历</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%91%E4%B8%8E%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86-%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">树与图的遍历 拓扑排序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">最短路径</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%B4%E7%B4%A0dijkstra%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">朴素dijkstra算法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A0%86%E4%BC%98%E5%8C%96%E7%89%88dijkstra\"><span class=\"toc-text\">堆优化版dijkstra</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Bellman-Ford%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">Bellman-Ford算法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#spfa-%E7%AE%97%E6%B3%95%EF%BC%88%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96%E7%9A%84Bellman-Ford%E7%AE%97%E6%B3%95%EF%BC%89\"><span class=\"toc-text\">spfa 算法（队列优化的Bellman-Ford算法）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#spfa%E5%88%A4%E6%96%AD%E5%9B%BE%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E8%B4%9F%E7%8E%AF\"><span class=\"toc-text\">spfa判断图中是否存在负环</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#floyd%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">floyd算法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91\"><span class=\"toc-text\">最小生成树</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%B4%E7%B4%A0%E7%89%88prim%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">朴素版prim算法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Kruskal%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">Kruskal算法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%88%86%E5%9B%BE\"><span class=\"toc-text\">二分图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%93%E8%89%B2%E6%B3%95%E5%88%A4%E5%88%AB%E4%BA%8C%E5%88%86%E5%9B%BE\"><span class=\"toc-text\">染色法判别二分图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">匈牙利算法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">数学知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B4%A8%E6%95%B0\"><span class=\"toc-text\">质数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%95%E9%99%A4%E6%B3%95%E5%88%A4%E5%AE%9A%E8%B4%A8%E6%95%B0\"><span class=\"toc-text\">试除法判定质数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%95%E9%99%A4%E6%B3%95%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0\"><span class=\"toc-text\">试除法分解质因数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%B4%E7%B4%A0%E7%AD%9B%E6%B3%95%E6%B1%82%E7%B4%A0%E6%95%B0\"><span class=\"toc-text\">朴素筛法求素数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E6%80%A7%E7%AD%9B%E6%B3%95%E6%B1%82%E7%B4%A0%E6%95%B0\"><span class=\"toc-text\">线性筛法求素数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%A6%E6%95%B0\"><span class=\"toc-text\">约数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%95%E9%99%A4%E6%B3%95%E6%B1%82%E6%89%80%E6%9C%89%E7%BA%A6%E6%95%B0\"><span class=\"toc-text\">试除法求所有约数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BA%A6%E6%95%B0%E4%B8%AA%E6%95%B0%E5%92%8C%E7%BA%A6%E6%95%B0%E4%B9%8B%E5%92%8C\"><span class=\"toc-text\">约数个数和约数之和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">欧几里得算法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">欧拉函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B1%82%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">求欧拉函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AD%9B%E6%B3%95%E6%B1%82%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">筛法求欧拉函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E5%B9%82\"><span class=\"toc-text\">快速幂</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">扩展欧几里得算法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83\"><span class=\"toc-text\">高斯消元</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0\"><span class=\"toc-text\">组合计数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E6%8E%A8%E6%B3%95%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0\"><span class=\"toc-text\">递推法求组合数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87%E9%A2%84%E5%A4%84%E7%90%86%E9%80%86%E5%85%83%E7%9A%84%E6%96%B9%E5%BC%8F%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0\"><span class=\"toc-text\">通过预处理逆元的方式求组合数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lucas%E5%AE%9A%E7%90%86\"><span class=\"toc-text\">Lucas定理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0%E6%B3%95%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0\"><span class=\"toc-text\">分解质因数法求组合数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%9A%E5%BC%88%E8%AE%BA\"><span class=\"toc-text\">博弈论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0\"><span class=\"toc-text\">卡特兰数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AC%E5%B9%B3%E7%BB%84%E5%90%88%E6%B8%B8%E6%88%8FICG\"><span class=\"toc-text\">公平组合游戏ICG</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%90%91%E5%9B%BE%E6%B8%B8%E6%88%8F\"><span class=\"toc-text\">有向图游戏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mex%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">Mex运算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SG%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">SG函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%90%91%E5%9B%BE%E6%B8%B8%E6%88%8F%E7%9A%84%E5%92%8C\"><span class=\"toc-text\">有向图游戏的和</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">数据范围</span></a></li></ol>","author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Essence of Linear Algebra","uid":"895af0f03f87247c5b74532216cc5f3b","slug":"Essence-of-Linear-Algebra","date":"2023-04-12T06:47:45.000Z","updated":"2024-02-22T03:52:13.945Z","comments":true,"path":"api/articles/Essence-of-Linear-Algebra.json","keywords":"计算机技术,大数据,人工智能","cover":"https://yt3.ggpht.com/-waYunpNuwpY/AAAAAAAAAAI/AAAAAAAAAAA/UwFbmYRfzyo/s900-c-k-no-mo-rj-c0xffffff/photo.jpg","text":"中英对照表 English 中文 cross production 叉积 determinantion 行列式 eigenvalue 特征值 Vector Th...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"数学","slug":"数学","count":2,"path":"api/categories/数学.json"}],"tags":[{"name":"学习笔记","slug":"学习笔记","count":17,"path":"api/tags/学习笔记.json"},{"name":"线性代数","slug":"线性代数","count":1,"path":"api/tags/线性代数.json"}],"author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}}},"next_post":{"title":"SSH通道转发端口","uid":"26698f911e325cfba7ac154843c0d927","slug":"SSH通道转发端口","date":"2023-02-27T12:45:44.000Z","updated":"2024-02-22T03:52:13.945Z","comments":true,"path":"api/articles/SSH通道转发端口.json","keywords":"计算机技术,大数据,人工智能","cover":"https://images.unsplash.com/photo-1534590158618-73acb7d3641d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wzNjAwOTd8MHwxfHNlYXJjaHwxOHx8dHVubmVsfGVufDB8fHx8MTY5NDE1MDExMHww&ixlib=rb-4.0.3&q=80&w=400","text":" 背景：有一台服务器，仅能访问ssh服务端口，其余端口处于安全考虑均不可访问。如果想与服务器的其他端口通信，该怎么办？ 参考文章 利用ssh通道，即可任意通信，...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"技术帖子","slug":"技术帖子","count":4,"path":"api/categories/技术帖子.json"}],"tags":[{"name":"技术贴士","slug":"技术贴士","count":2,"path":"api/tags/技术贴士.json"},{"name":"网络","slug":"网络","count":1,"path":"api/tags/网络.json"}],"author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}}}}