{"title":"大数据存储复习课","uid":"ae3ff290d2666f99246dfbc36b578f64","slug":"大数据存储复习课","date":"2023-02-13T01:18:20.000Z","updated":"2024-02-22T03:52:13.949Z","comments":true,"path":"api/articles/大数据存储复习课.json","keywords":"计算机技术,大数据,人工智能","cover":null,"content":"<h1 id=\"复习课\"><a href=\"#复习课\" class=\"headerlink\" title=\"复习课\"></a>复习课</h1><h2 id=\"考试题型\"><a href=\"#考试题型\" class=\"headerlink\" title=\"考试题型\"></a>考试题型</h2><ol>\n<li>论述题（30分）    -论述自己对概念的理解</li>\n<li>分布式数据库设计及查询优化（20） -分布式数据库的设计，分片的设计、定义、对应的查询优化</li>\n<li>分布式存取优化（30） -物理上的特征指标、传输代价的计算</li>\n<li>存储结构设计 （10） -HBase设计、布隆过滤器设计（PPT）</li>\n<li>分布式事务 （10） -一致性、并发控制<br>三次作业分别对应了2、3、4项</li>\n</ol>\n<h2 id=\"章节回顾\"><a href=\"#章节回顾\" class=\"headerlink\" title=\"章节回顾\"></a>章节回顾</h2><h3 id=\"第一章\"><a href=\"#第一章\" class=\"headerlink\" title=\"第一章\"></a>第一章</h3><p>• 大数据的由来（为什么会产生大数据存储系统？<u>横向拓展需求、系统可靠可用、一致性需求在传统的关系模型下无法有效解决</u>）<br>• 大数据的特点<br>• 大数据需要怎样的存储系统</p>\n<h3 id=\"第二章\"><a href=\"#第二章\" class=\"headerlink\" title=\"第二章\"></a>第二章</h3><p>• 客户&#x2F;服务器的体系结构（<strong>不同体系结构中AP功能的变化</strong>）<br>• share nothing 架构、分库分表架构、存算分离架构与客户&#x2F;服务器架构之间的关系（开放性问题，结合PPT与自己的理解）<a href=\"https://zhuanlan.zhihu.com/p/324609981\">参考文章</a><br>• 关系型分布式数据库系统的模式结构<br>• 分布式数据库系统的数据透明性（三种、定义，举例；给操作语句判定是那种透明性）<br>• 多数据库系统和分布式数据库系统的区别与联系</p>\n<h3 id=\"第三章\"><a href=\"#第三章\" class=\"headerlink\" title=\"第三章\"></a>第三章</h3><p>• 分布式数据库设计的分片原则、定义（运算）、表示方法<br>• 分布式数据库的查询优化策略及片段查询优化方法<br>• 分布式查询的存取优化方法、特征参数的计算（选择运算、投影运算、自然连接运算、半连接运算）</p>\n<h3 id=\"第四章\"><a href=\"#第四章\" class=\"headerlink\" title=\"第四章\"></a>第四章</h3><p>• HBase解决了HDFS的哪些问题？具有哪些特点？<br>• HBase数据库中region的含义及其特性。同一个表不同行的数据可以存放在不同的服务器，同一个表相同行的数据也可以存放在不同的服务器。这句话如何理解？</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一个服务器是Region的存储机构，但存储一个Region不代表存储一个表；每个Region都包含若干个Store，一个Store就是一个列族，是把列族作为对象存储的，不一定是一个表的，可能是不同表的分片。</p></blockquote>\n<p>• HBase增删改查的真正操作内容是什么？<br>• HBase的读写流程</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>HDFS 的优势： （大文件存储、多副本、自动分块）</p></blockquote>\n<ol>\n<li>如果仅用HDFS进行数据管理，存在一些问题：</li>\n<li>HDFS不支持对数据的随机改写</li>\n<li>HDFS没有数据表的概念</li>\n<li>HDFS无法针对行数统计、过滤扫描等常见数据查询</li>\n<li>功能实现快捷操作，一般需要通过Mapreduce实现。<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>HBase底层采用HDFS存储，但是文件结构和元数据等自身维护。具体来说具有以下特点：</p></blockquote>\n</li>\n<li>采用面向列加键值对的存储模式</li>\n<li>可实现便捷的横向扩展</li>\n<li>可以实现自动的数据分片</li>\n<li>实现较为严格的读写一致性和自动故障转移</li>\n<li>实现对全文的检索与过滤（过滤器）</li>\n</ol>\n<h3 id=\"第五章\"><a href=\"#第五章\" class=\"headerlink\" title=\"第五章\"></a>第五章</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><u>每种数据结构主要解决什么样的问题（场景）？实现原理？</u>例如跳表主要支持快速写入，支持区间查询，更新代价低。B+树虽然也支持，但更新代价高，不支持大数据场景。LSM树跳表（内存）和多路文件归并、布隆过滤器（外存）的结合。</p></blockquote>\n<p>（1）跳跃表<br>• 解决的问题类型（快速写入、更新代价低、支持区间查询)<br>• 查找和插入的流程（实现原理）<br>跳表是LSM树的内存结构；<br>（2）LSM树<br>• 解决的问题类型 （“顺序写入，随机查找”）<br>• 什么是compaction？分为哪两种类型？优缺点。<br>• 为什么说LSM树是一种写入友好的数据结构？</p>\n<p>（3）布隆过滤器<br>• 解决的问题类型（有效排除一些对象）<br>• 构造方法和查询过程（实现原理）</p>\n<p>（4）为什么说HBase是一种“顺序写入，随机查找”的分布式数据库？</p>\n<h3 id=\"第六章\"><a href=\"#第六章\" class=\"headerlink\" title=\"第六章\"></a>第六章</h3><p>（1）嵌套事务的概念<br>（2）分布式数据库的一致性级别的内容，并可举例说明<br>（3）分布式数据库的CAP理论和BASE理论（会举例说明）<br>（4）分布式事务提交协议（<strong>两阶段提交协议执行流程，存在的问题-阻塞，解决的方法-终结协议</strong>）<br>（5）HBase的一致性ACID特性的实现方法（了解）<br>（6）分布式一致性算法Paxos（主要流程）</p>\n<h3 id=\"第七章\"><a href=\"#第七章\" class=\"headerlink\" title=\"第七章\"></a>第七章</h3><p>• 并发控制的基本概念（解决的问题、可串行化调度）<br>• 分布式并发控制解决的问题（三种分布式锁的应用场景、方案思路）<br>• 分布式事务可串行化判定（题目）<br>• 三种分布式锁的应用场景及具体解决方案</p>\n","text":"复习课考试题型 论述题（30分） -论述自己对概念的理解 分布式数据库设计及查询优化（20） -分布式数据库的设计，分片的设计、定义、对应的查询优化 分布式存取...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"大数据","slug":"大数据","count":11,"path":"api/categories/大数据.json"}],"tags":[{"name":"学习笔记","slug":"学习笔记","count":17,"path":"api/tags/学习笔记.json"},{"name":"大数据存储","slug":"大数据存储","count":1,"path":"api/tags/大数据存储.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E4%B9%A0%E8%AF%BE\"><span class=\"toc-text\">复习课</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%80%83%E8%AF%95%E9%A2%98%E5%9E%8B\"><span class=\"toc-text\">考试题型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">章节回顾</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%AB%A0\"><span class=\"toc-text\">第一章</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%AB%A0\"><span class=\"toc-text\">第二章</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E7%AB%A0\"><span class=\"toc-text\">第三章</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E7%AB%A0\"><span class=\"toc-text\">第四章</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%94%E7%AB%A0\"><span class=\"toc-text\">第五章</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%85%AD%E7%AB%A0\"><span class=\"toc-text\">第六章</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%83%E7%AB%A0\"><span class=\"toc-text\">第七章</span></a></li></ol></li></ol></li></ol>","author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"数据挖掘复习课","uid":"4b679f8318026349163fd3a282ea69e7","slug":"数据挖掘复习课","date":"2023-02-15T13:38:55.000Z","updated":"2024-02-22T03:52:13.965Z","comments":true,"path":"api/articles/数据挖掘复习课.json","keywords":"计算机技术,大数据,人工智能","cover":null,"text":"第1章 认识数据挖掘1、数据挖掘的定义2、有指导学习和无指导学习3、数据挖掘的过程 第2章 基本数据挖掘技术1、决策树概念和C 4.5算法的一般过程2、决策树关...","link":"","photos":[],"count_time":{"symbolsCount":494,"symbolsTime":"1 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":5,"path":"api/categories/机器学习.json"}],"tags":[{"name":"学习笔记","slug":"学习笔记","count":17,"path":"api/tags/学习笔记.json"}],"author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}}},"next_post":{"title":"Docker导出镜像","uid":"0485b8f7691dafa496f29ff47600c4f0","slug":"Docker导出镜像","date":"2023-01-29T06:54:49.000Z","updated":"2024-02-22T03:52:13.945Z","comments":true,"path":"api/articles/Docker导出镜像.json","keywords":"计算机技术,大数据,人工智能","cover":null,"text":" 主要介绍使用docker export快速导出单个容器镜像。 都说docker有”一次运行，处处使用”的优点，是实现Dev-ops的有力工具，那么本文相关内容...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"大数据","slug":"大数据","count":11,"path":"api/categories/大数据.json"}],"tags":[{"name":"技术贴士","slug":"技术贴士","count":2,"path":"api/tags/技术贴士.json"},{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"}],"author":{"name":"以太工坊","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"分享我的课程学习笔记、经验与有趣的小玩意.图片等资源无法加载时请使用代理","socials":{"github":"https://github.com/Tim-Saijun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"telegram":{"icon":"/img/telegram.svg","link":"https://t.me/tim_run"},"Email":{"icon":"/img/mail.svg","link":"mailto:b@zair.top"},"RSS":{"icon":"/img/rss.svg","link":"/atom.xml"}}}}}}